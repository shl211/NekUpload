<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

<!-- Standard defined expansion-->
<xs:complexType name="StandardEType">
    <xs:attribute name="COMPOSITE" type="xs:string" use="required"/>
    <xs:attribute name="NUMMODES" type="xs:int" use="required"/>
    <xs:attribute name="FIELD" type="xs:string"/>
    <xs:attribute name="TYPE" type="xs:string"/>
    <xs:attribute name="REFIDS" type="xs:string"/>
</xs:complexType>

<!-- User defined expansion-->
<xs:complexType name="UserDefinedEType">
    <xs:attribute name="COMPOSITE" type="xs:string" use="required"/>
    <xs:attribute name="NUMMODES" type="xs:string" use="required"/>
    <xs:attribute name="FIELD" type="xs:string"/>
    <xs:attribute name="BASISTYPE" type="xs:string"/>
    <xs:attribute name="NUMPOINTS" type="xs:string"/>
    <xs:attribute name="POINTSTYPE" type="xs:string"/>
    <xs:attribute name="REFIDS" type="xs:string"/>
</xs:complexType>

<!-- PARAMETERS -->
<xs:complexType name="ParameterType">
    <xs:sequence>
        <xs:element name="P" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
</xs:complexType>

<!-- SOLVER INFO-->
<xs:complexType name="SolverInfoType">
    <xs:sequence>
        <xs:element name="I" maxOccurs="unbounded" minOccurs="1">
            <xs:complexType>
                <xs:attribute name="PROPERTY" type="xs:string" use="required"/>
                <xs:attribute name="VALUE" type="xs:string" use="required"/>
            </xs:complexType>
        </xs:element>
    </xs:sequence>
</xs:complexType>

<!-- VARIABLES -->
<xs:complexType name="VariableType">
    <xs:sequence>
        <xs:element name="V" minOccurs="1" maxOccurs="unbounded">
            <xs:complexType>
                <xs:simpleContent>
                    <xs:extension base="xs:string">
                        <xs:attribute name="ID" type="xs:int" use="required"/>
                    </xs:extension>
                </xs:simpleContent>
            </xs:complexType>
        </xs:element>
    </xs:sequence>
</xs:complexType>

<!-- BOUNDARYREGIONS -->
<xs:complexType name="BoundaryRegionType">
    <xs:sequence>
        <xs:element name="B" minOccurs="1" maxOccurs="unbounded">
            <xs:complexType>
                <xs:simpleContent>
                    <xs:extension base="xs:string">
                        <xs:attribute name="ID" type="xs:int" use="required"/>
                    </xs:extension>
                </xs:simpleContent>
            </xs:complexType>
        </xs:element>
    </xs:sequence>
</xs:complexType>

<!-- Global System Solution Algorithm-->
<xs:complexType name="GlobalSysSolInfoType">
    <xs:sequence>
        <xs:element name="V" minOccurs="1" maxOccurs="unbounded">
            <xs:complexType>
                <xs:attribute name="VAR" type="xs:string" use="required"/>
                <xs:sequence>
                    <xs:element name="I" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:attribute name="PROPERTY" type="xs:string" use="required"/>
                            <xs:attribute name="VALUE" type="xs:string" use="required"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:complexType>
        </xs:element>
    </xs:sequence>
</xs:complexType>

<!-- BOUNDARYCONDITIONS-->
<xs:complexType name="BoundaryConditionsRegionType">
    <xs:attribute name="VAR" type="xs:string" use="required"/>
    <xs:attribute name="VALUE" type="xs:string" use="required"/>
    <xs:attribute name="USERDEFINEDTYPE" type="xs:string"/>
    <xs:attribute name="FILE" type="xs:string"/>
</xs:complexType>

<xs:complexType name="BoundaryConditionsType">
    <xs:sequence>
        <xs:element name="REGION" maxOccurs="unbounded">
            <xs:complexType>
                <xs:attribute name="REF" type="xs:int" use="required"/>
                <xs:choice maxOccurs="unbounded">
                    <xs:element name="D" type="BoundaryConditionsRegionType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="N" type="BoundaryConditionsRegionType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="P" type="BoundaryConditionsRegionType" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="R" minOccurs="0" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:attribute name="PRIMCOEFF" type="xs:string" use="required"/>
                        </xs:complexType>
                    </xs:element>
                </xs:choice>
            </xs:complexType>
        </xs:element>
    </xs:sequence>
</xs:complexType>

<!-- Functions NOTE: seems to be a lot more function definitions than expected-->
<!-- Should separate out into different choices, like with expansions E-->
<xs:complexType name="FunctionType">
    <xs:sequence>
        <xs:element name="E" maxOccurs="unbounded">
            <xs:complexType>
                <xs:attribute name="VAR" type="xs:string" use="required"/>
                <xs:attribute name="VALUE" type="xs:string" use="required"/>
                <xs:attribute name="EVARS" type="xs:string"/>
                <xs:attribute name="FILE" type="xs:string"/>
                <xs:attribute name="TIMEDEPENDENT" type="xs:int"/>
            </xs:complexType>
        </xs:element>
    </xs:sequence>
</xs:complexType>

<!-- Zones for Movements -->
<xs:complexType name="ZonesType">
    <xs:choice maxOccurs="unbounded">
        <xs:element name="FIXED">
            <xs:complexType> 
                <xs:attribute name="ID" type="xs:int" use="required"/>
                <xs:attribute name="DOMAIN" type="xs:string" use="required"/>
            </xs:complexType> 
        </xs:element>
        <xs:element name="ROTATE">
            <xs:complexType> 
                <xs:attribute name="ID" type="xs:int" use="required"/>
                <xs:attribute name="DOMAIN" type="xs:string" use="required"/>
                <xs:attribute name="ORIGIN" type="xs:string" use="required"/>
                <xs:attribute name="AXIS" type="xs:string" use="required"/>
                <xs:attribute name="ANGVEL" type="xs:string" use="required"/>
            </xs:complexType> 
        </xs:element>
        <xs:element name="TRANSLATE">
            <xs:complexType> 
                <xs:attribute name="ID" type="xs:int" use="required"/>
                <xs:attribute name="DOMAIN" type="xs:string" use="required"/>
                <xs:attribute name="VELOCITY" type="xs:string" use="required"/>
                <xs:attribute name="DISPLACEMENT" type="xs:string" use="required"/>
            </xs:complexType> 
        </xs:element>
    </xs:choice>
</xs:complexType>

<!-- Interfaces for Movement -->
<xs:complexType name="InterfacesType">
    <xs:sequence>
        <xs:element name="INTERFACE" maxOccurs="unbounded">
            <xs:complexType>
                <xs:all>
                    <xs:element name="LEFT">
                        <xs:complexType>
                            <xs:attribute name="ID" type="xs:int" use="required"/>
                            <xs:attribute name="BOUNDARY" type="xs:string" use="required"/>
                            <xs:attribute name="SKIPCHECK" type="xs:boolean"/>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="RIGHT">
                        <xs:complexType>
                            <xs:attribute name="ID" type="xs:int" use="required"/>
                            <xs:attribute name="BOUNDARY" type="xs:string" use="required"/>
                            <xs:attribute name="SKIPCHECK" type="xs:boolean"/>
                        </xs:complexType>
                    </xs:element>
                </xs:all>
            </xs:complexType>
        </xs:element>
    </xs:sequence>
</xs:complexType>

<!-- Time Integration Scheme -->
<xs:complexType name="TimeIntegrationSchemeType">
    <xs:sequence>
        <xs:element name="METHOD" type="xs:string"/>
        <xs:element name="VARIANT" type="xs:string"/>
        <xs:element name="ORDER" type="xs:int"/>
        <xs:element name="FREEPARAMETERS" type="xs:string"/>
    </xs:sequence>
</xs:complexType>

<!-- Base type for all forcing types -->
<xs:complexType name="ForcingBase" abstract="true">
    <xs:attribute name="TYPE" type="xs:string" use="required"/>
</xs:complexType>

<!-- Absorption -->
<xs:complexType name="ForcingAbsorption">
    <xs:complexContent>
        <xs:extension base="ForcingBase">
            <xs:sequence>
                <xs:choice maxOccurs="unbounded">
                    <xs:element name="COEFF" type="xs:string"/>
                    <xs:element name="REFFLOW" type="xs:string"/>
                    <xs:element name="REFFLOWTIME" type="xs:string"/>
                    <xs:element name="BOUNDARYREGIONS" type="xs:string"/>
                </xs:choice>
            </xs:sequence>
        </xs:extension>
    </xs:complexContent>
</xs:complexType>

<!-- Body -->
<xs:complexType name="ForcingBody">
    <xs:complexContent>
        <xs:extension base="ForcingBase">
            <xs:sequence>
                <xs:element name="BODYFORCE" type="xs:string"/>
            </xs:sequence>
        </xs:extension>
    </xs:complexContent>
</xs:complexType>

<!-- Synthetic Turbulence Generator -->
<xs:complexType name="ForcingSyntheticTurbulence">
    <xs:complexContent>
        <xs:extension base="ForcingBase">
            <xs:sequence>
                <xs:choice maxOccurs="unbounded">
                    <xs:element name="BoxOfEddies" type="xs:string"/>
                    <xs:element name="Sigma" type="xs:string"/>
                    <xs:element name="BulkVelocity" type="xs:string"/>
                    <xs:element name="ReynoldsStresses" type="xs:string"/>
                    <xs:element name="CharLengthScales" type="xs:string"/>
                </xs:choice>
            </xs:sequence>
        </xs:extension>
    </xs:complexContent>
</xs:complexType>

<!-- Moving Reference Frame -->
<xs:complexType name="ForcingMovingReference">
    <xs:complexContent>
        <xs:extension base="ForcingBase">
            <xs:sequence>
                <xs:choice maxOccurs="unbounded">
                    <xs:element name="FRAMEVELOCITY" type="xs:string" minOccurs="1"/>
                    <xs:element name="PIVOTPOINT" type="xs:string" minOccurs="1"/>
                    <xs:element name="EXTERNALFORCE" type="xs:string"/>
                    <xs:element name="MOTIONPRESCRIBED" type="xs:string"/>
                    <xs:element name="MASS" type="xs:string"/>
                    <xs:element name="DAMPING" type="xs:string"/>
                    <xs:element name="RIGIDITY" type="xs:string"/>
                    <xs:element name="INITIALDISPLACEMENT" type="xs:string"/>
                    <xs:element name="TRAVELINGWAVESPEED" type="xs:string"/>
                    <xs:element name="OutputFile" type="xs:string"/>
                    <xs:element name="OutputFrequency" type="xs:string"/>
                </xs:choice>
            </xs:sequence>
        </xs:extension>
    </xs:complexContent>
</xs:complexType>

<!-- Programmatic -->
<xs:complexType name="ForcingProgrammatic">
    <xs:complexContent>
        <xs:extension base="ForcingBase"/>
    </xs:complexContent>
</xs:complexType>

<!-- Noise -->
<xs:complexType name="ForcingNoise">
    <xs:complexContent>
        <xs:extension base="ForcingBase">
            <xs:sequence>
                <xs:choice maxOccurs="unbounded">
                    <xs:element name="WHITENOISE" type="xs:string" minOccurs="1"/>
                    <xs:element name="UPDATEFREQ" type="xs:string"/>
                    <xs:element name="NSTEPS" type="xs:string"/>
                </xs:choice>
            </xs:sequence>
        </xs:extension>
    </xs:complexContent>
</xs:complexType>

<!-- Define FORCE as a substitution group -->
<xs:element name="FORCE" type="ForcingBase" abstract="true"/>
<xs:element name="FORCE_ABS" substitutionGroup="FORCE" type="ForcingAbsorption"/>
<xs:element name="FORCE_BODY" substitutionGroup="FORCE" type="ForcingBody"/>
<xs:element name="FORCE_SYNTHETIC" substitutionGroup="FORCE" type="ForcingSyntheticTurbulence"/>
<xs:element name="FORCE_MRF" substitutionGroup="FORCE" type="ForcingMovingReference"/>
<xs:element name="FORCE_PROG" substitutionGroup="FORCE" type="ForcingProgrammatic"/>
<xs:element name="FORCE_NOISE" substitutionGroup="FORCE" type="ForcingNoise"/>

<!-- This is the root element -->
<xs:element name="NEKTAR">
    <xs:complexType>
        <xs:all>

            <!-- Metadata could appear if NekMesh used -->
            <xs:element name="Metadata" minOccurs="0">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="Provenance">
                            <xs:complexType>
                                <xs:all>
                                    <xs:element name="GitBranch" type="xs:string"/>
                                    <xs:element name="GitSHA1" type="xs:string"/>
                                    <xs:element name="Hostname" type="xs:string"/>
                                    <xs:element name="NektarVersion" type="xs:string"/>
                                    <xs:element name="Timestamp" type="xs:string"/>
                                </xs:all>
                            </xs:complexType>
                        </xs:element>
                        <xs:element name="NekMeshCommandLine" type="xs:string"/>
                    </xs:all>
                </xs:complexType>
            </xs:element>

            <!-- Only allow geometry as HDF5 File. Note that this is for enforcement of Nektar++ best practices -->
            <xs:element name="GEOMETRY" minOccurs="1">
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>Define where the HDF5 geometry file is located</xs:documentation>
                    </xs:annotation>
                    <xs:attribute name="DIM" type="xs:string" use="required"/>
                    <xs:attribute name="SPACE" type="xs:string" use="required"/>
                    <xs:attribute name="HDF5FILE" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>
        
            <!-- Expansions can be defined here -->
            <xs:element name="EXPANSIONS" minOccurs="1">
                <xs:complexType>
                    <xs:sequence>
                        <!--Allow both user and standard type expansions to be specified-->
                        <xs:choice maxOccurs="unbounded">
                            <xs:element name="E" type="StandardEType"/>
                            <xs:element name="E" type="UserDefinedEType"/>
                            <!-- There are also ELEMENT and F and H??? -->
                        </xs:choice>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        
            <!-- Conditions can be defined here-->
            <xs:element name="CONDITIONS" minOccurs="1">
                <xs:complexType>
                    <xs:sequence>
                        <xs:choice maxOccurs="unbounded">
                            <xs:element name="PARAMETERS" type="ParameterType"/>
                            <xs:element name="SOLVERINFO" type="SolverInfoType"/>
                            <xs:element name="VARIABLES" type="VariableType"/>
                            <xs:element name="BOUNDARYREGIONS" type="BoundaryRegionType"/>
                            <xs:element name="FUNCTION" type="FunctionType"/>
                            <xs:element name="TIMEINTEGRATIONSCHEME" type="TimeIntegrationSchemeType"/>
                            <xs:element name="GLOBALSYSSOLNINFO" type="GlobalSysSolInfoType"/>
                        </xs:choice>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <!-- Filters here -->
            <xs:element name="FILTERS" minOccurs="0" maxOccurs="1">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="FILTER" minOccurs="1" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:element name="PARAM" maxOccurs="unbounded">
                                        <xs:complexType>
                                            <xs:simpleContent>
                                                <xs:extension base="xs:string">
                                                    <xs:attribute name="NAME" type="xs:string" use="required"/>
                                                </xs:extension>
                                            </xs:simpleContent>
                                        </xs:complexType>
                                    </xs:element>
                                </xs:sequence>
                                <xs:attribute name="TYPE" type="xs:string" use="required"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <!-- Coupling here -->
            <xs:element name="COUPLING" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="I" minOccurs="1" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:attribute name="PROPERTY" type="xs:string" use="required"/>
                                <xs:attribute name="VALUE" type="xs:string" use="required"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                    <xs:attribute name="TYPE" type="xs:string" use="required"/>
                    <xs:attribute name="NAME" type="xs:string" use="required"/>
                </xs:complexType>
            </xs:element>

            <!-- REFINEMENTS here -->
            <xs:element name="REFINEMENTS">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="R" maxOccurs="unbounded">
                            <xs:complexType>
                                <xs:attribute name="REF" type="xs:int" use="required"/>
                                <xs:attribute name="TYPE" type="xs:string" use="required"/>
                                <xs:attribute name="RADIUS" type="xs:double" use="required"/>
                                <xs:attribute name="COORDINATE1" type="xs:string" use="required"/>
                                <xs:attribute name="COORDINATE2" type="xs:string" use="required"/>
                                <xs:attribute name="NUMMODES" type="xs:string" use="required"/>
                            </xs:complexType>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

            <!-- MOVEMENTS here -->
            <xs:element name="MOVEMENT">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="ZONES" type="ZonesType"/>
                        <xs:element name="INTERFACES" type="InterfacesType"/>
                    </xs:all>
                </xs:complexType>
            </xs:element>

            <!-- Forcing -->
            <xs:element name="FORCING">
                <xs:complexType>
                    <xs:sequence maxOccurs="unbounded">
                        <xs:element ref="FORCE"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>

        </xs:all>
    </xs:complexType>
</xs:element>